.register-progress {
    padding-left: 30px;
    overflow: hidden;
}
.register-progress .pross {
    position: relative;
    background: #ddd;
    float: left;
    width: 300px;
    height: 35px;
    line-height: 35px;
    color: #666;
    font-size: 16px;
    padding-left: 10px;
    overflow: hidden;
}
.register-progress .pross .index {
    background: #999;
    display: inline-block;
    width: 18px;
    height: 18px;
    line-height: 18px;
    -webkit-border-radius: 18px;
    -moz-border-radius: 18px;
    border-radius: 18px;
    color: #fff;
    text-align: center;
    margin-right: 10px;
}
.register-progress .pross .pross-dir {
    background: #ddd;
    position: absolute;
    top: -17px;
    right: -19px;
}
.register-progress .pross .pross-dir .outside,
.register-progress .pross .pross-dir .inside {
    display: inline-block;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 35px 19px;
}
.register-progress .pross .pross-dir .outside {
    border-color: transparent transparent transparent #f8f8f8;
}
.register-progress .pross .pross-dir .inside {
    border-color: transparent transparent transparent #ddd;
    margin-left: -47px;
}
.register-progress .pross-ok {
    background: #f96;
    color: #fff;
}
.register-progress .pross-ok .index {
    background: #fff;
    color: #f96;
}
.register-progress .pross-ok .pross-dir {
    background: #ddd;
}
.register-progress .pross-ok .pross-dir .outside {
    border-color: transparent transparent transparent #f8f8f8;
}
.register-progress .pross-ok .pross-dir .inside {
    border-color: transparent transparent transparent #f96;
}
.register-progress .pross-ok .pross-dir-bg {
    background: #ddd;
}
.extends-register-tooltip-icon,
.prompt .state,
.success .state,
.error .state,
.pass-word-strength .state {
    background-image: url(../images/icons.png);
    background-repeat: no-repeat;
    display: inline-block;
    width: 16px;
    height: 16px;
    vertical-align: middle;
    margin-right: 5px;
}
.extends-icon-border {
    position: absolute;
    border-style: solid;
    border-width: 8px;
    height: 0;
    width: 0;
    top: 8px;
}
.tooltip-info {
    display: none;
    position: absolute;
    max-width: 204px;
    _width: 204px;
    background-color: #fff;
    padding: 8px;
    color: #666;
    font-size: 0.75em;
}
.tooltip-info .mess {
    display: inline-block;
    width: 163px;
    vertical-align: top;
    text-align: left;
    font-size: 12px;
}
.prompt {
    display: block;
}
.prompt .strength {
    display: none;
}
.prompt .state {
    display: inline-block;
    background-position: -6px -11px;
}
.success {
    display: block;
    border: none;
}
.success span,
.success .mess {
    display: none;
}
.success .state {
    display: inline-block;
    background-position: -7px -83px;
}
.success .strength {
    display: none;
}
.error {
    display: block;
}
.error .state {
    background-position: -7px -48px;
}
.error .strength {
    display: none;
}
.pass-word-strength {
    display: block;
}
.pass-word-strength .strength {
    display: block;
    margin-bottom: 10px;
}
.pass-word-strength .strength em {
    font-style: normal;
    margin-right: 10px;
}
.pass-word-strength .strength span {
    display: inline-block;
    background: #ccc;
    width: 46px;
    height: 6px;
    margin-right: 4px;
}
.pass-word-strength .strength .red {
    background: #dc3c00;
}
.pass-word-strength .strength .green {
    background: #62aa00;
}
.pass-word-strength .state {
    display: inline-block;
    background-position: -7px -83px;
}
.bind-mobile {
    margin-top: 30px;
}
.bind-mobile ul {
    float: left;
    margin: 0 0 -20px;
}
.bind-mobile ul li {
    list-style: none;
    padding-bottom: 20px;
    vertical-align: middle;
    font-size: 1.166em;
    color: #333;
}
.bind-mobile ul li span {
    display: inline-block;
    vertical-align: middle;
}
.bind-mobile ul li em,
.bind-mobile ul li i {
    font-style: normal;
}
.bind-mobile .info {
    text-align: left;
}
.bind-mobile .info input {
    border: 1px solid #ccc;
    width: 298px;
    height: 35px;
    line-height: 35px;
    padding-left: 5px;
    font-size: 14px;
    color: #ccc;
}
.bind-mobile .info input:focus {
    color: #333;
}

.bind-mobile .info .err {
    padding-left: 350px;
}

.bind-mobile .info .tit {
    display: inline-block;
    width: 272px;
    padding-right: 5px;
    text-align: right;
}
.bind-mobile .info .code {
    width: 300px;
}
.bind-mobile .info .send-code {
    display: inline-block;
    background: #ddd;
    margin-left: 10px;
    width: 120px;
    height: 35px;
    line-height: 30px;
    font-size: 14px;
    white-space: nowrap;
    color: #333;
    text-align: center;
    text-decoration: none;
}
.bind-mobile .info .resend-code {
    position: relative;
    display: none;
}
.bind-mobile .info .resend-code a {
    display: inline-block;
    background: #ddd;
    margin-left: 10px;
    width: 120px;
    height: 35px;
    line-height: 35px;
    font-size: 14px;
    color: #333;
    text-align: center;
    text-decoration: none;
}
.bind-mobile .info .countdown {
    position: absolute;
    left: 12px;
    top: 50%;
    margin-top: 20px;
    white-space: nowrap;
    color: #adadad;
}
.bind-mobile .info .submit{
    display: inline-block;
    line-height: 30px;
    margin-right: 10px;
    color: #fff;
    text-align: center;
    text-decoration: none;
}
.bind-mobile .info .submit {
    margin-left: 274px;
    background: #dc3c00;
    width: 298px;
    height: 30px;
    line-height: 30px;
    vertical-align: text-bottom;
    font-size: 16px;
}

.bind-mobile .info .mail {
    margin-left: 274px;
}

.code-img {
    width: 90px;
    height: 32px;
    margin-left: 10px;
}

.change-code {
    font-size: 1em;
    margin-left: 5px;
    margin-top: 10px;
    color: #999;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3N0eWx1cy90ZW1wbGF0ZXMvcmVnaXN0ZXItcHJvZ3Jlc3Muc3R5bCIsIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9uaWIvbGliL25pYi9vdmVyZmxvdy5zdHlsIiwiYmluZC1tb2JpbGUuY3NzIiwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25pYi9saWIvbmliL3ZlbmRvci5zdHlsIiwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25pYi9saWIvbmliL2ZsZXguc3R5bCIsIi4uL3N0eWx1cy90ZW1wbGF0ZXMvcmVnaXN0ZXItdG9vbHRpcC5zdHlsIiwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL25pYi9saWIvbmliL2JvcmRlci5zdHlsIiwiLi4vc3R5bHVzL3RlbXBsYXRlcy9iaW5kLW1vYmlsZS5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQUE7RUNrQkUsa0JBQUE7RUNoQkg7QUZBQztFQUNFLG9CQUFBO0VHb2lCQSxrQkFBQTtFSGxpQkEsYUFBQTtFQUNBLGNBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFRUVIO0FGREc7RUcyaEJBLGtCQUFBO0VDbGhCQSx1QkFBQTtFSk5FLGFBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUdpQlMscUJBQUE7RUhmVCxhQUFBO0VBQ0Esb0JBQUE7RUFDQSxvQkFBQTtFRUlMO0FGSEc7RUdpaEJBLGtCQUFBO0VIL2dCRSxvQkFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0VFS0w7QUZKSzs7RUlORix1QkFBQTtFSlNJLFVBQUE7RUFDQSxXQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFRU1QO0FGTEs7RUFDRSwyREFBQTtFRU9QO0FGTks7RUFDRSx3REFBQTtFQUNBLG9CQUFBO0VFUVA7QUZQQztFR2dnQkUsa0JBQUE7RUg5ZkEsYUFBQTtFRVNIO0FGUkc7RUc2ZkEsa0JBQUE7RUgzZkUsYUFBQTtFRVVMO0FGVEc7RUcw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RixxQkFBQTtFSXBkRSxjQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0VBQ0EsNkJBQUE7RUFDQSxpQkFBQTtFTHFMTDtBS3BMRztFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7RUxzTEwiLCJmaWxlIjoiYmluZC1tb2JpbGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlZ2lzdGVyLXByb2dyZXNzXG4gIHBhZGRpbmctbGVmdCAzMnB4XG4gIG92ZXJmbG93IGhpZGRlblxuICAucHJvc3NcbiAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgIGJhY2tncm91bmQgI2RkZFxuICAgIGZsb2F0IGxlZnRcbiAgICB3aWR0aCAxNzlweFxuICAgIGhlaWdodCAzNXB4XG4gICAgbGluZS1oZWlnaHQgMzVweFxuICAgIGNvbG9yICM2NjZcbiAgICBmb250LXNpemUgMTZweFxuICAgIHBhZGRpbmctbGVmdCAxMHB4XG4gICAgLmluZGV4XG4gICAgICBiYWNrZ3JvdW5kICM5OTlcbiAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgICB3aWR0aCAxOHB4XG4gICAgICBoZWlnaHQgMThweFxuICAgICAgbGluZS1oZWlnaHQgMThweFxuICAgICAgYm9yZGVyLXJhZGl1cyAxOHB4XG4gICAgICBjb2xvciAjRkZGXG4gICAgICB0ZXh0LWFsaWduIGNlbnRlclxuICAgICAgbWFyZ2luLXJpZ2h0IDEwcHhcbiAgICAucHJvc3MtZGlyXG4gICAgICBiYWNrZ3JvdW5kICNkZGRcbiAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICB0b3AgLTE3cHhcbiAgICAgIHJpZ2h0IC0xMHB4XG4gICAgICAub3V0c2lkZVxuICAgICAgLmluc2lkZVxuICAgICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgICB3aWR0aCAwXG4gICAgICAgIGhlaWdodCAwXG4gICAgICAgIGJvcmRlci1zdHlsZSBzb2xpZFxuICAgICAgICBib3JkZXItd2lkdGggMzVweCAxOXB4XG4gICAgICAub3V0c2lkZVxuICAgICAgICBib3JkZXItY29sb3IgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2Y4ZjhmOFxuICAgICAgLmluc2lkZVxuICAgICAgICBib3JkZXItY29sb3IgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2RkZFxuICAgICAgICBtYXJnaW4tbGVmdCAtNDdweFxuICAucHJvc3Mtb2tcbiAgICBiYWNrZ3JvdW5kICNmZjk5NjZcbiAgICBjb2xvciAjRkZGXG4gICAgLmluZGV4XG4gICAgICBiYWNrZ3JvdW5kICNGRkZcbiAgICAgIGNvbG9yICNmZjk5NjZcbiAgICAucHJvc3MtZGlyXG4gICAgICBiYWNrZ3JvdW5kICNkZGRcbiAgICAgIC5vdXRzaWRlXG4gICAgICAgIGJvcmRlci1jb2xvciB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZjhmOGY4XG4gICAgICAuaW5zaWRlXG4gICAgICAgIGJvcmRlci1jb2xvciB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmY5OTY2XG4gICAgLnByb3NzLWRpci1iZ1xuICAgICAgYmFja2dyb3VuZCB0cmFuc3BhcmVudFxuICAgICAgei1pbmRleCAxMDAiLCIvKlxuICogT3ZlcmZsb3cgdXRpbGl0eS4gTWFwcyB0byByZWd1bGFyIG92ZXJmbG93LCBhbmQgYWRkcyBhbiBlbGxpcHNpcyB2YWx1ZS5cbiAqXG4gKiBTeW5vcHNpczpcbiAqXG4gKiAgIG92ZXJmbG93OiA8dHlwZT5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgb3ZlcmZsb3c6IGF1dG9cbiAqICAgICBvdmVyZmxvdzogaGlkZGVuXG4gKiAgICAgb3ZlcmZsb3c6IGVsbGlwc2lzXG4gKlxuICovXG5cbm92ZXJmbG93KClcbiAgaWYgYXJndW1lbnRzWzBdID09IGVsbGlwc2lzXG4gICAgZWxsaXBzaXMoKVxuICBlbHNlXG4gICAgb3ZlcmZsb3c6IGFyZ3VtZW50c1xuIiwiLnJlZ2lzdGVyLXByb2dyZXNzIHtcbiAgcGFkZGluZy1sZWZ0OiAzMnB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLnJlZ2lzdGVyLXByb2dyZXNzIC5wcm9zcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogI2RkZDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiAxNzlweDtcbiAgaGVpZ2h0OiAzNXB4O1xuICBsaW5lLWhlaWdodDogMzVweDtcbiAgY29sb3I6ICM2NjY7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuLnJlZ2lzdGVyLXByb2dyZXNzIC5wcm9zcyAuaW5kZXgge1xuICBiYWNrZ3JvdW5kOiAjOTk5O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxOHB4O1xuICBoZWlnaHQ6IDE4cHg7XG4gIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDE4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDE4cHg7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbi5yZWdpc3Rlci1wcm9ncmVzcyAucHJvc3MgLnByb3NzLWRpciB7XG4gIGJhY2tncm91bmQ6ICNkZGQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMTdweDtcbiAgcmlnaHQ6IC0xMHB4O1xufVxuLnJlZ2lzdGVyLXByb2dyZXNzIC5wcm9zcyAucHJvc3MtZGlyIC5vdXRzaWRlLFxuLnJlZ2lzdGVyLXByb2dyZXNzIC5wcm9zcyAucHJvc3MtZGlyIC5pbnNpZGUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMzVweCAxOXB4O1xufVxuLnJlZ2lzdGVyLXByb2dyZXNzIC5wcm9zcyAucHJvc3MtZGlyIC5vdXRzaWRlIHtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZjhmOGY4O1xufVxuLnJlZ2lzdGVyLXByb2dyZXNzIC5wcm9zcyAucHJvc3MtZGlyIC5pbnNpZGUge1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNkZGQ7XG4gIG1hcmdpbi1sZWZ0OiAtNDdweDtcbn1cbi5yZWdpc3Rlci1wcm9ncmVzcyAucHJvc3Mtb2sge1xuICBiYWNrZ3JvdW5kOiAjZjk2O1xuICBjb2xvcjogI2ZmZjtcbn1cbi5yZWdpc3Rlci1wcm9ncmVzcyAucHJvc3Mtb2sgLmluZGV4IHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgY29sb3I6ICNmOTY7XG59XG4ucmVnaXN0ZXItcHJvZ3Jlc3MgLnByb3NzLW9rIC5wcm9zcy1kaXIge1xuICBiYWNrZ3JvdW5kOiAjZGRkO1xufVxuLnJlZ2lzdGVyLXByb2dyZXNzIC5wcm9zcy1vayAucHJvc3MtZGlyIC5vdXRzaWRlIHtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZjhmOGY4O1xufVxuLnJlZ2lzdGVyLXByb2dyZXNzIC5wcm9zcy1vayAucHJvc3MtZGlyIC5pbnNpZGUge1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmOTY7XG59XG4ucmVnaXN0ZXItcHJvZ3Jlc3MgLnByb3NzLW9rIC5wcm9zcy1kaXItYmcge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgei1pbmRleDogMTAwO1xufVxuLmV4dGVuZHMtcmVnaXN0ZXItdG9vbHRpcC1pY29uLFxuLnByb21wdCAuc3RhdGUsXG4uc3VjY2VzcyAuc3RhdGUsXG4uZXJyb3IgLnN0YXRlLFxuLnBhc3Mtd29yZC1zdHJlbmd0aCAuc3RhdGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJpY29ucy5wbmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMTZweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG4uZXh0ZW5kcy1pY29uLWJvcmRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiA4cHg7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIHRvcDogOHB4O1xufVxuLnRvb2x0aXAtaW5mbyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWF4LXdpZHRoOiAyMDRweDtcbiAgX3dpZHRoOiAyMDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogOHB4O1xuICBjb2xvcjogIzY2NjtcbiAgZm9udC1zaXplOiAwLjc1ZW07XG59XG4udG9vbHRpcC1pbmZvIC5tZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTYzcHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbi5wcm9tcHQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5wcm9tcHQgLnN0cmVuZ3RoIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5wcm9tcHQgLnN0YXRlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNnB4IC0xMXB4O1xufVxuLnN1Y2Nlc3Mge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyOiBub25lO1xufVxuLnN1Y2Nlc3Mgc3Bhbixcbi5zdWNjZXNzIC5tZXNzIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5zdWNjZXNzIC5zdGF0ZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTdweCAtODNweDtcbn1cbi5zdWNjZXNzIC5zdHJlbmd0aCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uZXJyb3Ige1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5lcnJvciAuc3RhdGUge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtN3B4IC00OHB4O1xufVxuLmVycm9yIC5zdHJlbmd0aCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ucGFzcy13b3JkLXN0cmVuZ3RoIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4ucGFzcy13b3JkLXN0cmVuZ3RoIC5zdHJlbmd0aCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuLnBhc3Mtd29yZC1zdHJlbmd0aCAuc3RyZW5ndGggZW0ge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbi5wYXNzLXdvcmQtc3RyZW5ndGggLnN0cmVuZ3RoIHNwYW4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQ6ICNjY2M7XG4gIHdpZHRoOiA0NnB4O1xuICBoZWlnaHQ6IDZweDtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG59XG4ucGFzcy13b3JkLXN0cmVuZ3RoIC5zdHJlbmd0aCAucmVkIHtcbiAgYmFja2dyb3VuZDogI2RjM2MwMDtcbn1cbi5wYXNzLXdvcmQtc3RyZW5ndGggLnN0cmVuZ3RoIC5ncmVlbiB7XG4gIGJhY2tncm91bmQ6ICM2MmFhMDA7XG59XG4ucGFzcy13b3JkLXN0cmVuZ3RoIC5zdGF0ZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTdweCAtODNweDtcbn1cbi5iaW5kLW1vYmlsZSB7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG59XG4uYmluZC1tb2JpbGUgdWwge1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luOiAwIDAgLTIwcHg7XG59XG4uYmluZC1tb2JpbGUgdWwgbGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgZm9udC1zaXplOiAxLjE2NmVtO1xuICBjb2xvcjogIzMzMztcbn1cbi5iaW5kLW1vYmlsZSB1bCBsaSBzcGFuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLmJpbmQtbW9iaWxlIHVsIGxpIGVtLFxuLmJpbmQtbW9iaWxlIHVsIGxpIGkge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG4uYmluZC1tb2JpbGUgLmluZm8ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLmJpbmQtbW9iaWxlIC5pbmZvIGlucHV0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgd2lkdGg6IDI5OHB4O1xuICBoZWlnaHQ6IDM1cHg7XG4gIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogI2NjYztcbn1cbi5iaW5kLW1vYmlsZSAuaW5mbyBpbnB1dDpmb2N1cyB7XG4gIGNvbG9yOiAjMzMzO1xufVxuLmJpbmQtbW9iaWxlIC5pbmZvIC50aXQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNzJweDtcbiAgcGFkZGluZy1yaWdodDogNXB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbi5iaW5kLW1vYmlsZSAuaW5mbyAuY29kZSB7XG4gIHdpZHRoOiAxMzhweDtcbn1cbi5iaW5kLW1vYmlsZSAuaW5mbyAuc2VuZC1jb2RlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kOiAjZGRkO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgd2lkdGg6IDEyMHB4O1xuICBoZWlnaHQ6IDM1cHg7XG4gIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGNvbG9yOiAjMzMzO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5iaW5kLW1vYmlsZSAuaW5mbyAucmVzZW5kLWNvZGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uYmluZC1tb2JpbGUgLmluZm8gLnJlc2VuZC1jb2RlIGEge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQ6ICNkZGQ7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogMzVweDtcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICMzMzM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLmJpbmQtbW9iaWxlIC5pbmZvIC5jb3VudGRvd24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBjb2xvcjogI2FkYWRhZDtcbn1cbi5iaW5kLW1vYmlsZSAuaW5mbyAuc3VibWl0LFxuLmJpbmQtbW9iaWxlIC5pbmZvIC5pZ25vcmUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5iaW5kLW1vYmlsZSAuaW5mbyAuc3VibWl0IHtcbiAgbWFyZ2luLWxlZnQ6IDI3NHB4O1xuICBiYWNrZ3JvdW5kOiAjZGMzYzAwO1xuICB3aWR0aDogMjk4cHg7XG4gIGhlaWdodDogMzBweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuLmJpbmQtbW9iaWxlIC5pbmZvIC5pZ25vcmUge1xuICBjb2xvcjogIzJiODFhOTtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuIiwidXNlKCcuLi9ub2Rlcy92ZW5kb3ItaGVscGVycy5qcycpXG5AaW1wb3J0ICdjb25maWcnXG5cbi8qXG4gKiBBbGlhcyBcIm5vd3JhcFwiIGFzIFwibm8td3JhcFwiLlxuICovXG5cbm5vLXdyYXAgPSB1bnF1b3RlKCdub3dyYXAnKVxuXG4vKlxuICogSGVscGVyIHRvIGZpbmQgb3V0IGlmIGEgZ2l2ZW4gdmFsdWUgaXMgYSB3aWR0aFxuICovXG5cbmlzLXdpZHRoKHZhbClcbiAgaWYgYXV0byA9PSB2YWxcbiAgICByZXR1cm4gdHJ1ZVxuICBlbHNlIGlmIHZhbCAmJiAndW5pdCcgPT0gdHlwZSh2YWwpXG4gICAgLy8gU3R5bHVzIGRvZXMgbm90IHNob3J0IGNpcmN1aXQgc28gd2UgbmVlZCB0byBwZXJmb3JtIHRoaXMgYXMgYSBkaXN0aW5jdFxuICAgIC8vIG9wZXJhdGlvbiB0byBwcmV2ZW50IGVycm9yc1xuICAgIHJldHVybiAnJyAhPSB1bml0KHZhbClcbiAgcmV0dXJuIGZhbHNlXG5cbi8qXG4gKiBWZW5kb3Igc3VwcG9ydCBmb3IgdGhlIGdpdmVuIHByb3AgLyBhcmd1bWVudHMsIG9wdGlvbmFsbHkgc3BlY2lmeWluZyB0aGVcbiAqIG9ubHkgcHJlZml4ZXMgdG8gdXRpbGl6ZSwgb3IgdGhvc2Ugd2hpY2ggc2hvdWxkIGJlIGlnbm9yZWQuXG4gKi9cblxudmVuZG9yKHByb3AsIGFyZ3MsIG9ubHkgPSBudWxsLCBpZ25vcmUgPSBudWxsLCB2ZW5kb3ItcHJvcGVydHkgPSB0cnVlKVxuICBuZWVkX25vcm1hbGl6ZSA9ICF2ZW5kb3ItcHJvcGVydHkgb3IgcHJvcCBpbiAoJ3RyYW5zaXRpb24nICd0cmFuc2l0aW9uLXByb3BlcnR5JyAnYm9yZGVyLWltYWdlJyAnYm9yZGVyLWltYWdlLXNsaWNlJylcbiAgZm9yIHByZWZpeCBpbiB2ZW5kb3ItcHJlZml4ZXNcbiAgICB1bmxlc3MgKG9ubHkgYW5kICEocHJlZml4IGluIG9ubHkpKSBvciAoaWdub3JlIGFuZCBwcmVmaXggaW4gaWdub3JlKVxuICAgICAgaWYgb2ZmaWNpYWwgPT0gcHJlZml4XG4gICAgICAgIGlmIG5lZWRfbm9ybWFsaXplXG4gICAgICAgICAge3Byb3B9OiBub3JtYWxpemUocHJvcCwoJyVzJyAlIGFyZ3MpKVxuICAgICAgICBlbHNlXG4gICAgICAgICAge3Byb3B9OiBhcmdzXG4gICAgICBlbHNlXG4gICAgICAgIG5ld3Byb3AgPSBwcm9wXG4gICAgICAgIG5ld3Byb3AgPSAnLScgKyBwcmVmaXggKyAnLScgKyBwcm9wIGlmIHZlbmRvci1wcm9wZXJ0eVxuXG4gICAgICAgIGlmIG5lZWRfbm9ybWFsaXplXG4gICAgICAgICAge25ld3Byb3B9OiBub3JtYWxpemUocHJvcCwoJyVzJyAlIGFyZ3MpLHByZWZpeClcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHtuZXdwcm9wfTogYXJnc1xuLypcbiAqIFZlbmRvcml6ZSB0aGUgZ2l2ZW4gdmFsdWUuXG4gKi9cblxudmVuZG9yLXZhbHVlKGFyZywgb25seSA9IG51bGwsIGlnbm9yZSA9IG51bGwpXG4gIHByb3AgPSBjdXJyZW50LXByb3BlcnR5WzBdXG4gIGZvciBwcmVmaXggaW4gdmVuZG9yLXByZWZpeGVzXG4gICAgdW5sZXNzIChvbmx5IGFuZCAhKHByZWZpeCBpbiBvbmx5KSkgb3IgKGlnbm9yZSBhbmQgcHJlZml4IGluIGlnbm9yZSkgb3Igb2ZmaWNpYWwgPT0gcHJlZml4XG4gICAgICBhZGQtcHJvcGVydHkocHJvcCwgJy0lcy0lcycgJSAocHJlZml4IGFyZykpXG4gIGFyZ1xuXG4vKlxuICogVmVuZG9yIFwiYm94LXNoYWRvd1wiIHN1cHBvcnQuXG4gKi9cblxuYm94LXNoYWRvdygpXG4gIHZlbmRvcignYm94LXNoYWRvdycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwidXNlci1zZWxlY3RcIiBzdXBwb3J0LlxuICovXG5cbnVzZXItc2VsZWN0KClcbiAgdmVuZG9yKCd1c2VyLXNlbGVjdCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1jb3VudFwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLWNvdW50KClcbiAgdmVuZG9yKCdjb2x1bW4tY291bnQnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tZ2FwXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tZ2FwKClcbiAgdmVuZG9yKCdjb2x1bW4tZ2FwJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLXJ1bGVcIiBzdXBwb3J0LlxuICovXG5cbmNvbHVtbi1ydWxlKClcbiAgdmVuZG9yKCdjb2x1bW4tcnVsZScsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1ydWxlLWNvbG9yXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tcnVsZS1jb2xvcigpXG4gIHZlbmRvcignY29sdW1uLXJ1bGUtY29sb3InLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tcnVsZS13aWR0aFwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXJ1bGUtd2lkdGgoKVxuICB2ZW5kb3IoJ2NvbHVtbi1ydWxlLXdpZHRoJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLXJ1bGUtc3R5bGVcIiBzdXBwb3J0LlxuICovXG5cbmNvbHVtbi1ydWxlLXN0eWxlKClcbiAgdmVuZG9yKCdjb2x1bW4tcnVsZS1zdHlsZScsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi13aWR0aFwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXdpZHRoKClcbiAgdmVuZG9yKCdjb2x1bW4td2lkdGgnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tc3BhblwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXNwYW4oKVxuICB2ZW5kb3IoJ2NvbHVtbi1zcGFuJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tZmlsbFwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLWZpbGwoKVxuICB2ZW5kb3IoJ2NvbHVtbi1maWxsJywgYXJndW1lbnRzLCBvbmx5OiBtb3opXG5cbi8qXG4gKiBMZWdhY3kgc3ludGF4IHN1cHBvcnQgZm9yIGJhY2tncm91bmQtY2xpcCBhbmQgYmFja2dyb3VuZC1vcmlnaW5cbiAqL1xuXG5sZWdhY3ktYmctdmFsdWVzKHByb3BlcnR5LCBhcmdzKVxuICBsZWdhY3lfYXJncyA9ICgpXG4gIGltcG9ydGFuY2UgPSB1bnF1b3RlKCcnKVxuICBmb3Igc3ViYXJncyBpbiBhcmdzXG4gICAgZm9yIGFyZyBpbiBzdWJhcmdzXG4gICAgICBpZiBhcmcgaW4gKGJvcmRlci1ib3ggcGFkZGluZy1ib3ggY29udGVudC1ib3gpXG4gICAgICAgIGFyZyA9IHVucXVvdGUoJ2JvcmRlcicpICBpZiBhcmcgPT0gYm9yZGVyLWJveFxuICAgICAgICBhcmcgPSB1bnF1b3RlKCdwYWRkaW5nJykgaWYgYXJnID09IHBhZGRpbmctYm94XG4gICAgICAgIGFyZyA9IHVucXVvdGUoJ2NvbnRlbnQnKSBpZiBhcmcgPT0gY29udGVudC1ib3hcbiAgICAgIGlmIGFyZyAhPSAnIWltcG9ydGFudCdcbiAgICAgICAgcHVzaChsZWdhY3lfYXJncyxhcmcpXG4gICAgICBlbHNlXG4gICAgICAgIGltcG9ydGFuY2UgPSAhaW1wb3J0YW50XG4gIHZlbmRvcihwcm9wZXJ0eSwgdW5xdW90ZShqb2luKCcsICcsbGVnYWN5X2FyZ3MpKSBpbXBvcnRhbmNlLCBvbmx5OiBtb3ogd2Via2l0KVxuXG4vKlxuICogVmVuZG9yIFwiYmFja2dyb3VuZC1jbGlwXCIgc3VwcG9ydC5cbiAqL1xuXG5iYWNrZ3JvdW5kLWNsaXAoKVxuICBpZiBhcmd1bWVudHNbMF0gPT0gdGV4dFxuICAgIHZlbmRvcignYmFja2dyb3VuZC1jbGlwJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQpXG4gIGVsc2VcbiAgICBsZWdhY3ktYmctdmFsdWVzKCdiYWNrZ3JvdW5kLWNsaXAnLCBhcmd1bWVudHMpXG4gICAgYmFja2dyb3VuZC1jbGlwOiBhcmd1bWVudHNcblxuLypcbiAqIFZlbmRvciBcImJhY2tncm91bmQtb3JpZ2luXCIgc3VwcG9ydC5cbiAqL1xuXG5iYWNrZ3JvdW5kLW9yaWdpbigpXG4gIGxlZ2FjeS1iZy12YWx1ZXMoJ2JhY2tncm91bmQtb3JpZ2luJywgYXJndW1lbnRzKVxuICBiYWNrZ3JvdW5kLW9yaWdpbjogYXJndW1lbnRzXG5cbi8qXG4gKiBWZW5kb3IgXCJiYWNrZ3JvdW5kLXNpemVcIiBzdXBwb3J0LlxuICovXG5cbmJhY2tncm91bmQtc2l6ZSgpXG4gIHZlbmRvcignYmFja2dyb3VuZC1zaXplJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNmb3JtXCIgc3VwcG9ydC5cbiAqL1xuXG50cmFuc2Zvcm0oKVxuICB2ZW5kb3IoJ3RyYW5zZm9ybScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zZm9ybS1vcmlnaW5cIiBzdXBwb3J0LlxuICovXG50cmFuc2Zvcm0tb3JpZ2luKClcbiAgICB2ZW5kb3IoJ3RyYW5zZm9ybS1vcmlnaW4nLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2Zvcm0tc3R5bGVcIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zZm9ybS1zdHlsZSgpXG4gIHZlbmRvcigndHJhbnNmb3JtLXN0eWxlJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYm9yZGVyLWltYWdlXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3JkZXItaW1hZ2UoKVxuICB2ZW5kb3IoJ2JvcmRlci1pbWFnZScsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNpdGlvblwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNpdGlvbigpXG4gIHZlbmRvcigndHJhbnNpdGlvbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zaXRpb24tcHJvcGVydHlcIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zaXRpb24tcHJvcGVydHkoKVxuICB2ZW5kb3IoJ3RyYW5zaXRpb24tcHJvcGVydHknLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG50cmFuc2l0aW9uLWR1cmF0aW9uKClcbiAgdmVuZG9yKCd0cmFuc2l0aW9uLWR1cmF0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb25cIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uKClcbiAgdmVuZG9yKCd0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zaXRpb24tZGVsYXlcIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zaXRpb24tZGVsYXkoKVxuICB2ZW5kb3IoJ3RyYW5zaXRpb24tZGVsYXknLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJiYWNrZmFjZS12aXNpYmlsaXR5XCIgc3VwcG9ydC5cbiAqL1xuXG5iYWNrZmFjZS12aXNpYmlsaXR5KClcbiAgdmVuZG9yKCdiYWNrZmFjZS12aXNpYmlsaXR5JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwicGVyc3BlY3RpdmVcIiBzdXBwb3J0LlxuICovXG5cbnBlcnNwZWN0aXZlKClcbiAgaWYgbWl4aW5cbiAgICB2ZW5kb3IoJ3BlcnNwZWN0aXZlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuICBlbHNlXG4gICAgJ3BlcnNwZWN0aXZlKCVzKScgJSBhcmd1bWVudHNcblxuLypcbiAqIFZlbmRvciBcInBlcnNwZWN0aXZlLW9yaWdpblwiIHN1cHBvcnQuXG4gKi9cblxucGVyc3BlY3RpdmUtb3JpZ2luKClcbiAgdmVuZG9yKCdwZXJzcGVjdGl2ZS1vcmlnaW4nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBPcGFjaXR5IHdpdGggY29uZGl0aW9uYWwgSUUgc3VwcG9ydC5cbiAqL1xuXG5vcGFjaXR5KG4sIGFyZ3MuLi4pXG4gIG9wYWNpdHk6IG4gYXJnc1xuICBpZiBzdXBwb3J0LWZvci1pZVxuICAgIGlmIG4gPT0gaW5oZXJpdCBvciBuID09IGluaXRpYWxcbiAgICAgIC1tcy1maWx0ZXI6IG4gYXJnc1xuICAgICAgZmlsdGVyOiBuIGFyZ3NcbiAgICBlbHNlXG4gICAgICB2YWwgPSByb3VuZChuICogMTAwKVxuICAgICAgaWYgdmFsID09IDEwMFxuICAgICAgICAtbXMtZmlsdGVyOiBub25lXG4gICAgICAgIGZpbHRlcjogbm9uZVxuICAgICAgZWxzZVxuICAgICAgICAtbXMtZmlsdGVyOiAnXCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT0lcylcIicgJSB2YWwgYXJnc1xuICAgICAgICBmaWx0ZXI6ICdhbHBoYShvcGFjaXR5PSVzKScgJSB2YWwgYXJnc1xuXG4vKlxuICogVmVuZG9yIFwidGV4dC1zaXplLWFkanVzdFwiXG4gKi9cblxudGV4dC1zaXplLWFkanVzdCgpXG4gIHZlbmRvcigndGV4dC1zaXplLWFkanVzdCcsIGFyZ3VtZW50cylcblxuLypcbiAqIEFsaWFzIHRoZSBcIndoaXRlLXNwYWNlXCIgcHJvcGVydHkuXG4gKi9cblxud2hpdGVzcGFjZSgpXG4gIHdoaXRlLXNwYWNlOiBhcmd1bWVudHNcblxuLypcbiAqIFZlbmRvciBcImJveC1zaXppbmdcIiBzdXBwb3J0LlxuICovXG5cbmJveC1zaXppbmcoKVxuICB2ZW5kb3IoJ2JveC1zaXppbmcnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtb3JpZW50XCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtb3JpZW50KClcbiAgdmVuZG9yKCdib3gtb3JpZW50JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYm94LWZsZXgtZ3JvdXBcIiBzdXBwb3J0LlxuICovXG5cbmJveC1mbGV4LWdyb3VwKClcbiAgdmVuZG9yKCdib3gtZmxleC1ncm91cCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImJveC1vcmRpbmFsLWdyb3VwXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtb3JkaW5hbC1ncm91cCgpXG4gIHZlbmRvcignYm94LW9yZGluYWwtZ3JvdXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cblxuLypcbiAqIFZlbmRvciBcImJveC1hbGlnblwiIHN1cHBvcnQuXG4gKi9cblxuYm94LWFsaWduKClcbiAgdmVuZG9yKCdib3gtYWxpZ24nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtcGFja1wiIHN1cHBvcnQuXG4gKi9cblxuYm94LXBhY2soKVxuICB2ZW5kb3IoJ2JveC1wYWNrJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYm94LWRpcmVjdGlvblwiIHN1cHBvcnQuXG4gKi9cblxuYm94LWRpcmVjdGlvbigpXG4gIHZlbmRvcignYm94LWRpcmVjdGlvbicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvblwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uKClcbiAgdmVuZG9yKCdhbmltYXRpb24nLCBhcmd1bWVudHMpXG5cblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1uYW1lXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tbmFtZSgpXG4gIHZlbmRvcignYW5pbWF0aW9uLW5hbWUnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tZHVyYXRpb25cIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1kdXJhdGlvbigpXG4gIHZlbmRvcignYW5pbWF0aW9uLWR1cmF0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLWRlbGF5XCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tZGVsYXkoKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1kZWxheScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1kaXJlY3Rpb25cIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1kaXJlY3Rpb24oKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1kaXJlY3Rpb24nLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24taXRlcmF0aW9uLWNvdW50XCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24taXRlcmF0aW9uLWNvdW50KClcbiAgdmVuZG9yKCdhbmltYXRpb24taXRlcmF0aW9uLWNvdW50JywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvblwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbigpXG4gIHZlbmRvcignYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1wbGF5LXN0YXRlXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tcGxheS1zdGF0ZSgpXG4gIHZlbmRvcignYW5pbWF0aW9uLXBsYXktc3RhdGUnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tZmlsbC1tb2RlXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tZmlsbC1tb2RlKClcbiAgdmVuZG9yKCdhbmltYXRpb24tZmlsbC1tb2RlJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiaHlwaGVuc1wiIHN1cHBvcnQuXG4gKi9cblxuaHlwaGVucygpXG4gIHZlbmRvcignaHlwaGVucycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImFwcGVhcmFuY2VcIiBzdXBwb3J0LlxuICovXG5cbmFwcGVhcmFuY2UoKVxuICB2ZW5kb3IoJ2FwcGVhcmFuY2UnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0YWItc2l6ZVwiIHN1cHBvcnQuXG4gKi9cblxudGFiLXNpemUoKVxuICB2ZW5kb3IoJ3RhYi1zaXplJywgYXJndW1lbnRzLCBvbmx5OiBtb3ogbyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcIm92ZXJmbG93LXNjcm9sbGluZ1wiIHN1cHBvcnQuXG4gKi9cblxub3ZlcmZsb3ctc2Nyb2xsaW5nKClcbiAgdmVuZG9yKCdvdmVyZmxvdy1zY3JvbGxpbmcnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcInRleHQtb3ZlcmZsb3dcIiBzdXBwb3J0LCAsIC1vLSBmb3Igb3BlcmEgOS4qIC0gMTAuKlxuICovXG5cbnRleHQtb3ZlcmZsb3coKVxuICB2ZW5kb3IoJ3RleHQtb3ZlcmZsb3cnLCBhcmd1bWVudHMsIG9ubHk6IG9mZmljaWFsIG8pXG5cbi8qXG4gKiBWZW5kb3IgXCJ0ZXh0LXNpemUtYWRqdXN0XCIgc3VwcG9ydC5cbiAqL1xudGV4dC1zaXplLWFkanVzdCgpXG4gIHZlbmRvcigndGV4dC1zaXplLWFkanVzdCcsIGFyZ3VtZW50cywgb25seTogb2ZmaWNpYWwgd2Via2l0IG1zKVxuXG4vKlxuICogVmVuZG9yIFwiZm9udC1zbW9vdGhpbmdcIiBzdXBwb3J0LCB3ZWJraXQgb25seS5cbiAqL1xuZm9udC1zbW9vdGhpbmcoKVxuICB2ZW5kb3IoJ2ZvbnQtc21vb3RoaW5nJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQpXG5cbi8qXG4gKiBIZWxwZXIgZm9yIGJvcmRlci1yYWRpdXMoKS5cbiAqL1xuXG4tYXBwbHktYm9yZGVyLXJhZGl1cyhwb3MsIGltcG9ydGFuY2UpXG4gIGlmIGxlbmd0aChwb3MpID09IDNcbiAgICAvLyBib3JkZXItcmFkaXVzOiA8dG9wIHwgYnV0dG9tPiA8bGVmdCB8IHJpZ2h0PiA8bj5cbiAgICB5ID0gcG9zWzBdXG4gICAgeCA9IHBvc1sxXVxuICAgIC8vIFdlIGRvbid0IHVzZSBtb3ogZm9yIHNpbXBsZSBib2Rlci1yYWRpdXMgYW55bW9yZVxuICAgIC8vIHZlbmRvcignYm9yZGVyLXJhZGl1cy0lcyVzJyAlIHBvcywgcG9zWzJdLCBvbmx5OiBtb3opXG4gICAgdmVuZG9yKCdib3JkZXItJXMtJXMtcmFkaXVzJyAlIHBvcywgcG9zWzJdIGltcG9ydGFuY2UsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcbiAgZWxzZSBpZiBwb3NbMF0gaW4gKHRvcCBib3R0b20pXG4gICAgLy8gYm9yZGVyLXJhZGl1czogPHRvcCB8IGJvdHRvbT4gPG4+XG4gICAgLWFwcGx5LWJvcmRlci1yYWRpdXMocG9zWzBdIGxlZnQgcG9zWzFdLCBpbXBvcnRhbmNlKVxuICAgIC1hcHBseS1ib3JkZXItcmFkaXVzKHBvc1swXSByaWdodCBwb3NbMV0sIGltcG9ydGFuY2UpXG4gIGVsc2UgaWYgcG9zWzBdIGluIChsZWZ0IHJpZ2h0KVxuICAgIC8vIGJvcmRlci1yYWRpdXM6IDxsZWZ0IHwgcmlnaHQ+IDxuPlxuICAgIHVuc2hpZnQocG9zLCB0b3ApO1xuICAgIC1hcHBseS1ib3JkZXItcmFkaXVzKHBvcywgaW1wb3J0YW5jZSlcbiAgICBwb3NbMF0gPSBib3R0b21cbiAgICAtYXBwbHktYm9yZGVyLXJhZGl1cyhwb3MsIGltcG9ydGFuY2UpXG5cbi8qXG4gKiBib3JkZXItcmFkaXVzIHN1cHBvcnRpbmcgdmVuZG9yIHByZWZpeGVzIGFuZFxuICogYXVnbWVudGVkIGJlaGF2aW9yLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgIGJvcmRlci1yYWRpdXM6IDJweCA1cHhcbiAqICAgIGJvcmRlci1yYWRpdXM6IHRvcCA1cHggYm90dG9tIDEwcHhcbiAqICAgIGJvcmRlci1yYWRpdXM6IGxlZnQgNXB4XG4gKiAgICBib3JkZXItcmFkaXVzOiB0b3AgbGVmdCA1cHhcbiAqICAgIGJvcmRlci1yYWRpdXM6IHRvcCBsZWZ0IDEwcHggYm90dG9tIHJpZ2h0IDVweFxuICogICAgYm9yZGVyLXJhZGl1czogdG9wIGxlZnQgMTBweCwgYm90dG9tIHJpZ2h0IDVweFxuICpcbiAqL1xuXG5ib3JkZXItcmFkaXVzKClcbiAgcG9zID0gKClcbiAgYXVnbWVudGVkID0gZmFsc2VcbiAgaW1wb3J0YW5jZSA9IGFyZ3VtZW50c1tsZW5ndGgoYXJndW1lbnRzKSAtIDFdID09ICFpbXBvcnRhbnQgPyAhaW1wb3J0YW50IDogdW5xdW90ZSgnJylcblxuICBmb3IgYXJncyBpbiBhcmd1bWVudHNcbiAgICBmb3IgYXJnIGluIGFyZ3NcbiAgICAgIGlmIGFyZyBpcyBhICdpZGVudCdcbiAgICAgICAgYXBwZW5kKHBvcywgYXJnKVxuICAgICAgICBhdWdtZW50ZWQgPSB0cnVlXG4gICAgICBlbHNlXG4gICAgICAgIGFwcGVuZChwb3MsIGFyZylcbiAgICAgICAgaWYgYXVnbWVudGVkXG4gICAgICAgICAgLWFwcGx5LWJvcmRlci1yYWRpdXMocG9zLCBpbXBvcnRhbmNlKVxuICAgICAgICAgIHBvcyA9ICgpXG4gIHZlbmRvcignYm9yZGVyLXJhZGl1cycsIHBvcywgb25seTogd2Via2l0IG9mZmljaWFsKSB1bmxlc3MgYXVnbWVudGVkXG5cbi8qKlxuICogVmVuZG9yIGlucHV0LXBsYWNlaG9sZGVyL3BsYWNlaG9sZGVyIHN1cHBvcnQuXG4gKlxuICogRXhhbXBsZXM6XG4gKiAgICAvLyBEZWZhdWx0IHN5bnRheFxuICogICAgYm9keVxuICogICAgICBwbGFjZWhvbGRlcihjb2xvciAjMzMzLCBmb250LXdlaWdodCBub3JtYWwpXG4gKlxuICogICAgLy8gVGhlIGNvbW1hIGlzIGltcG9ydGFudFxuICogICAgLnBsYWNlaG9sZGVyLXJlZFxuICogICAgICBwbGFjZWhvbGRlcihjb2xvciByZWQsKVxuICpcbiAqICAgIC8vIFdlIGNhbiBwYXNzIGEgZnVuY3Rpb25cbiAqICAgIGdyZWVuLXBsYWNlaG9sZGVyKClcbiAqICAgICAgY29sb3IgZ3JlZW5cbiAqICAgIC5wbGFjZWhvbGRlci1ncmVlblxuICogICAgICBwbGFjZWhvbGRlcihncmVlbi1wbGFjZWhvbGRlcilcbiAqXG4gKiAgICAvLyBXZSBjYW4gcGFzcyBhIGhhc2hcbiAqICAgIHRleHRhcmVhXG4gKiAgICAgIHBsYWNlaG9sZGVyKChmb250LXN0eWxlIGl0YWxpYykgKGZvbnQtd2VpZ2h0IGJvbGQpIChwYWRkaW5nICc0cHggMTBweCcpKVxuICovXG5wbGFjZWhvbGRlcigpXG4gIGZvciB2IGluICc6LXdlYmtpdC1pbnB1dCcgJy1tb3onICc6LW1veicgJy1tcy1pbnB1dCdcbiAgICAmOnt2fS1wbGFjZWhvbGRlclxuICAgICAgZm9yIHBhaXIgaW4gYXJndW1lbnRzXG4gICAgICAgIGlmIHR5cGVvZihwYWlyKSA9PSAnZnVuY3Rpb24nXG4gICAgICAgICAgcGFpcigpXG4gICAgICAgIGVsc2UgaWYgcGFpciBpcyBub3QgbnVsbCAmJiBwYWlyWzBdIGlzIG5vdCBudWxsXG4gICAgICAgICAge3BhaXJbMF19OiB0eXBlKHBhaXJbMV0pID09ICdzdHJpbmcnID8gcyhwYWlyWzFdKSA6IHBhaXJbMV1cbmlucHV0LXBsYWNlaG9sZGVyID0gcGxhY2Vob2xkZXJcblxuLypcbiAqIFZlbmRvciBiYWNrZ3JvdW5kIHN1cHBvcnQgKGdyYWRpZW50cykuXG4gKi9cblxuYmFja2dyb3VuZCgpXG4gIGlmIG1hdGNoKCctZ3JhZGllbnRcXCgnLCAnJythcmd1bWVudHMpXG4gICAgdmVuZG9yKCdiYWNrZ3JvdW5kJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgYmFja2dyb3VuZCBhcmd1bWVudHNcblxuYmFja2dyb3VuZC1pbWFnZSgpXG4gIGlmIG1hdGNoKCctZ3JhZGllbnRcXCgnLCAnJythcmd1bWVudHMpXG4gICAgdmVuZG9yKCdiYWNrZ3JvdW5kLWltYWdlJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgYmFja2dyb3VuZC1pbWFnZSBhcmd1bWVudHNcblxuY3Vyc29yKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2N1cnNvcicsIGFyZ3VtZW50cywgdmVuZG9yLXByb3BlcnR5OiBmYWxzZSlcbiAgZWxzZVxuICAgIGN1cnNvciBhcmd1bWVudHNcblxubGlzdC1zdHlsZSgpXG4gIGlmIG1hdGNoKCctZ3JhZGllbnRcXCgnLCAnJythcmd1bWVudHMpXG4gICAgdmVuZG9yKCdsaXN0LXN0eWxlJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgbGlzdC1zdHlsZSBhcmd1bWVudHNcblxubGlzdC1zdHlsZS1pbWFnZSgpXG4gIGlmIG1hdGNoKCctZ3JhZGllbnRcXCgnLCAnJythcmd1bWVudHMpXG4gICAgdmVuZG9yKCdsaXN0LXN0eWxlLWltYWdlJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgbGlzdC1zdHlsZS1pbWFnZSBhcmd1bWVudHNcbiIsIi8qXG4gKiBWZW5kb3IgXCJkaXNwbGF5OiBmbGV4XCIgc3VwcG9ydCB3aXRoIGZhbGxiYWNrIHRvIG9ic29sZXRlIHZlcnNpb25zLlxuICovXG5cbmZsZXgtdmVyc2lvbiA/PSBib3ggZmxleFxuXG4vL1xuLy8gMS4gRGlzcGxheSB2YWx1ZXNcbi8vICAgIC0gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1mbGV4Ym94LyNmbGV4LWNvbnRhaW5lcnNcbi8vXG5kaXNwbGF5KHR5cGUsIGFyZ3MuLi4pXG4gIGlmIGZsZXggPT0gdHlwZSB8fCBpbmxpbmUtZmxleCA9PSB0eXBlXG4gICAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgICAgaWYgZmxleCA9PSB0eXBlXG4gICAgICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94IGFyZ3NcbiAgICAgICAgZGlzcGxheTogdmVuZG9yLXZhbHVlKGJveCBhcmdzLCBvbmx5OiBtb3ogd2Via2l0KVxuICAgICAgZWxzZVxuICAgICAgICBkaXNwbGF5OiAtbXMtaW5saW5lLWZsZXhib3ggYXJnc1xuICAgICAgICBkaXNwbGF5OiB2ZW5kb3ItdmFsdWUoaW5saW5lLWJveCBhcmdzLCBvbmx5OiBtb3ogd2Via2l0KVxuICAgIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgICBkaXNwbGF5OiB2ZW5kb3ItdmFsdWUoYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpIC8vIG92ZXJ3cml0ZXMgb2xkIHdlYmtpdFxuICBlbHNlXG4gICAgZGlzcGxheTogYXJndW1lbnRzXG5cbi8qXG4gKiBOZXcgc3ludGF4IGZvciBicm93c2VycyBsaWtlIEdvb2dsZSBDaHJvbWUuXG4gKiBQbHVzIGEgdHJhbnNsYXRpb24gdG8gdGhlIG9sZCBzeW50YXgsIGlmIHBvc3NpYmxlLlxuICovXG5cblxuLy9cbi8vIDUuIE9yZGVyaW5nIGFuZCBPcmllbnRhdGlvblxuLy8gICAgLSBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWZsZXhib3gvI29yZGVyaW5nLWFuZC1vcmllbnRhdGlvblxuLy9cbi1mbGV4LW9ic29sZXRlLWRpcmVjdGlvbihkaXJlY3Rpb24pXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICBpZiByb3ctcmV2ZXJzZSA9PSBkaXJlY3Rpb24gfHwgY29sdW1uLXJldmVyc2UgPT0gZGlyZWN0aW9uXG4gICAgICB2ZW5kb3IoJ2JveC1kaXJlY3Rpb24nLCByZXZlcnNlLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuXG4gICAgaWYgcm93ID09IGRpcmVjdGlvbiB8fCByb3ctcmV2ZXJzZSA9PSBkaXJlY3Rpb25cbiAgICAgIHZlbmRvcignYm94LW9yaWVudCcsIGhvcml6b250YWwsIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG4gICAgZWxzZSBpZiBjb2x1bW4gPT0gZGlyZWN0aW9uIHx8IGNvbHVtbi1yZXZlcnNlID09IGRpcmVjdGlvblxuICAgICAgdmVuZG9yKCdib3gtb3JpZW50JywgdmVydGljYWwsIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG5cbi1mbGV4LW9ic29sZXRlLXdyYXAodmFsdWUpXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICAvLyBXQVJOOiB3cmFwLXJldmVyc2UgZG9lcyBub3QgaGF2ZSBhIGJveCBlcXVpdmFsZW50LiBUaGlzIHdpbGwgcmVuZGVyIGluIGRpZmZlcmVudCBtYW5uZXJzXG4gICAgLy8gICAgb24gYm94IHZzLiBmbGV4IHZhbHVlcy5cbiAgICBpZiAnd3JhcCcgPT0gdmFsdWUgfHwgd3JhcC1yZXZlcnNlID09IHZhbHVlXG4gICAgICB2ZW5kb3IoJ2JveC1saW5lcycsIG11bHRpcGxlLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuICAgIGVsc2UgaWYgbm93cmFwID09IHZhbHVlXG4gICAgICB2ZW5kb3IoJ2JveC1saW5lcycsIHNpbmdsZSwgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuZmxleC1kaXJlY3Rpb24oZGlyZWN0aW9uKVxuICAvLyBvYnNvbGV0ZVxuICAtZmxleC1vYnNvbGV0ZS1kaXJlY3Rpb24oZGlyZWN0aW9uKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1kaXJlY3Rpb24nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtcyBvZmZpY2lhbClcblxuZmxleC13cmFwKHZhbHVlKVxuICAvLyBvYnNvbGV0ZVxuICAtZmxleC1vYnNvbGV0ZS13cmFwKHZhbHVlKVxuXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LXdyYXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtcyBvZmZpY2lhbClcblxuZmxleC1mbG93KClcbiAgLy8gb2Jzb2xldGVcbiAgLWZsZXgtb2Jzb2xldGUtZGlyZWN0aW9uKGFyZ3VtZW50c1swXSlcbiAgLWZsZXgtb2Jzb2xldGUtZGlyZWN0aW9uKGFyZ3VtZW50c1sxXSlcbiAgLWZsZXgtb2Jzb2xldGUtd3JhcChhcmd1bWVudHNbMF0pXG4gIC1mbGV4LW9ic29sZXRlLXdyYXAoYXJndW1lbnRzWzFdKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1mbG93JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbXMgb2ZmaWNpYWwpXG5cblxub3JkZXIoKVxuICAvLyBvYnNvbGV0ZVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdib3gtb3JkaW5hbC1ncm91cCcsIGFyZ3VtZW50cywgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtb3JkZXInLCBhcmd1bWVudHMsIG9ubHk6IG1zKVxuICAgIHZlbmRvcignb3JkZXInLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuXG4vL1xuLy8gNy4gRmxleGliaWxpdHlcbi8vICAgIC0gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1mbGV4Ym94LyNmbGV4aWJpbGl0eVxuLy9cbmZsZXgtZ3Jvdyhncm93dGgpXG4gIC8vIG9ic29sZXRlXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2JveC1mbGV4JywgZ3Jvd3RoKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1ncm93JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbmZsZXgtYmFzaXMoKVxuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1iYXNpcycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG5mbGV4LXNocmluaygpXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LXNocmluaycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG5mbGV4KGdyb3d0aClcblxuICAvLyBvYnNvbGV0ZVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgc2hyaW5rID0gMVxuXG4gICAgaWYgbm9uZSA9PSBncm93dGggfHwgaW5pdGlhbCA9PSBncm93dGhcbiAgICAgIC8vIFdlbGwga25vd24gdmFsdWVzXG4gICAgICBzaHJpbmsgPSAwIGlmIG5vbmUgPT0gZ3Jvd3RoXG4gICAgICBncm93dGggPSAwXG4gICAgZWxzZSBpZiBpcy13aWR0aChncm93dGgpID09IHRydWVcbiAgICAgIC8vIEJhc2lzIGlzIGRlZmluZWQgYXMgdGhlIGZpcnN0IHBhcmFtZXRlclxuICAgICAgZ3Jvd3RoID0gYXJndW1lbnRzWzFdIHx8IDBcbiAgICAgIHNocmluayA9IGFyZ3VtZW50c1syXSBpZiAzIDw9IGxlbmd0aChhcmd1bWVudHMpXG4gICAgZWxzZSBpZiBhcmd1bWVudHNbMV0gJiYgaXMtd2lkdGgoYXJndW1lbnRzWzFdKSA9PSBmYWxzZVxuICAgICAgLy8gR3Jvd3RoIGlzIGZpcnN0IGFuZCBzaHJpbmsgaXMgc2Vjb25kXG4gICAgICBzaHJpbmsgPSBhcmd1bWVudHNbMV1cblxuICAgIC8vIFNpbmNlIHdlIGNhbid0IG1ha2UgdGhlIGRpc3RpbmN0aW9uIGJldHdlZW4gZ3Jvd2luZyBhbmQgc2hyaW5raW5nIGluIHRoZSBib3ggbW9kZWwsIHRha2VcbiAgICAvLyB0aGUgb25lIHRoYXQgcHJvdmlkZXMgdGhlIG1vc3QgZmxleGliaWxpdHkuXG4gICAgdmVuZG9yKCdib3gtZmxleCcsIG1heChncm93dGgsIHNocmluayksIGlnbm9yZTogbXMpXG5cbiAgLy8gbmV3XG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbXMgb2ZmaWNpYWwpXG5cblxuLy8gY29udmVydHMgdGhlIGp1c3RpZmljYXRpb24gYWxpZ25tZW50XG4tY29udmVydC1qdXN0aWZ5KGFsaWduKVxuICBpZiBmbGV4LXN0YXJ0ID09IGFsaWduXG4gICAgcmV0dXJuIHN0YXJ0XG4gIGVsc2UgaWYgZmxleC1lbmQgPT0gYWxpZ25cbiAgICByZXR1cm4gZW5kXG4gIGVsc2UgaWYgc3BhY2UtYXJvdW5kID09IGFsaWduXG4gICAgcmV0dXJuIGRpc3RyaWJ1dGVcbiAgZWxzZSBpZiBzcGFjZS1iZXR3ZWVuID09IGFsaWduXG4gICAgcmV0dXJuIGp1c3RpZnlcbiAgZWxzZVxuICAgIHJldHVybiBhbGlnblxuXG4vL1xuLy8gOC4gQWxpZ25tZW50XG4vLyAgICAtIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtZmxleGJveC8jYWxpZ25tZW50XG4vL1xuanVzdGlmeS1jb250ZW50KGFsaWduKVxuICAvLyBvYnNvbGV0ZVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdib3gtcGFjaycsIC1jb252ZXJ0LWp1c3RpZnkoYWxpZ24pLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1wYWNrJywgLWNvbnZlcnQtanVzdGlmeShhbGlnbiksIG9ubHk6IG1zKVxuICAgIHZlbmRvcignanVzdGlmeS1jb250ZW50JywgYWxpZ24sIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuYWxpZ24tY29udGVudChhbGlnbilcbiAgLy8gV0FSTjogT2Jzb2xldGUgc3BlYyBkb2VzIG5vdCBhbGxvdyBmb3IgYWRqdXN0bWVudCBoZXJlXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LWxpbmUtcGFjaycsIC1jb252ZXJ0LWp1c3RpZnkoYWxpZ24pLCBvbmx5OiBtcylcbiAgICB2ZW5kb3IoJ2FsaWduLWNvbnRlbnQnLCBhbGlnbiwgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG4vLyBjb252ZXJ0cyBhbGlnbm1lbnQgZnJvbSAnZmxleCcgdG8gbm9ybWFsIHZhbHVlXG4tY29udmVydC1hbGlnbm1lbnQoYWxpZ24pXG4gIGlmIGZsZXgtc3RhcnQgPT0gYWxpZ25cbiAgICByZXR1cm4gc3RhcnRcbiAgZWxzZSBpZiBmbGV4LWVuZCA9PSBhbGlnblxuICAgIHJldHVybiBlbmRcbiAgZWxzZVxuICAgIHJldHVybiBhbGlnblxuXG5hbGlnbi1pdGVtcyhhbGlnbilcbiAgLy8gb2Jzb2xldGVcbiAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignYm94LWFsaWduJywgLWNvbnZlcnQtYWxpZ25tZW50KGFsaWduKSwgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtYWxpZ24nLCAtY29udmVydC1hbGlnbm1lbnQoYWxpZ24pLCBvbmx5OiBtcylcbiAgICB2ZW5kb3IoJ2FsaWduLWl0ZW1zJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbmFsaWduLXNlbGYoYWxpZ24pXG4gIC8vIFdBUk46IE9ic29sZXRlIHNwZWMgZG9lcyBub3QgYWxsb3cgZm9yIG92ZXJyaWRpbmcgYWxpZ25tZW50IG9uIGluZGl2aWR1YWwgaXRlbXMuXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdhbGlnbi1zZWxmJywgYWxpZ24sIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcbiAgICB2ZW5kb3IoJ2ZsZXgtaXRlbS1hbGlnbicsIC1jb252ZXJ0LWFsaWdubWVudChhbGlnbiksIG9ubHk6IG1zKVxuIiwiLmV4dGVuZHMtcmVnaXN0ZXItdG9vbHRpcC1pY29uXG4gIGJhY2tncm91bmQtaW1hZ2UgdXJsKCAnaWNvbnMucG5nJyApXG4gIGJhY2tncm91bmQtcmVwZWF0IG5vLXJlcGVhdFxuICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICB3aWR0aCAxNnB4XG4gIGhlaWdodCAxNnB4XG4gIHZlcnRpY2FsLWFsaWduIG1pZGRsZVxuICBtYXJnaW4tcmlnaHQgNXB4XG4uZXh0ZW5kcy1pY29uLWJvcmRlclxuICBwb3NpdGlvbiBhYnNvbHV0ZVxuICBib3JkZXItc3R5bGUgc29saWRcbiAgYm9yZGVyLXdpZHRoIDhweFxuICBoZWlnaHQgMFxuICB3aWR0aCAwXG4gIHRvcCA4cHhcblxuLnRvb2x0aXAtaW5mb1xuICBkaXNwbGF5IG5vbmVcbiAgcG9zaXRpb24gYWJzb2x1dGVcbiAgbWF4LXdpZHRoIDIwNHB4XG4gIF93aWR0aCAyMDRweFxuICBiYWNrZ3JvdW5kLWNvbG9yICNGRkZcbiAgcGFkZGluZyA4cHhcbiAgY29sb3IgIzY2NlxuICBmb250LXNpemUgMC43NWVtXG4gIC5tZXNzXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICB3aWR0aCAxNjNweFxuICAgIHZlcnRpY2FsLWFsaWduIHRvcFxuICAgIHRleHQtYWxpZ24gbGVmdFxuICAgIGZvbnQtc2l6ZSAxMnB4XG5cbi5wcm9tcHRcbiAgZGlzcGxheSBibG9ja1xuICAuc3RyZW5ndGhcbiAgICBkaXNwbGF5IG5vbmVcbiAgLnN0YXRlXG4gICAgQGV4dGVuZHMgLmV4dGVuZHMtcmVnaXN0ZXItdG9vbHRpcC1pY29uXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uIC02cHggLTExcHg7XG5cbi5zdWNjZXNzXG4gIGRpc3BsYXkgYmxvY2tcbiAgYm9yZGVyIG5vbmVcbiAgc3BhblxuICAubWVzc1xuICAgIGRpc3BsYXkgbm9uZVxuICAuc3RhdGVcbiAgICBAZXh0ZW5kcyAuZXh0ZW5kcy1yZWdpc3Rlci10b29sdGlwLWljb25cbiAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgIGJhY2tncm91bmQtcG9zaXRpb24gLTdweCAtODNweDtcbiAgLnN0cmVuZ3RoXG4gICAgZGlzcGxheSBub25lXG5cbi5lcnJvclxuICBkaXNwbGF5IGJsb2NrXG4gIC5zdGF0ZVxuICAgIEBleHRlbmRzIC5leHRlbmRzLXJlZ2lzdGVyLXRvb2x0aXAtaWNvblxuICAgIGJhY2tncm91bmQtcG9zaXRpb24gLTdweCAtNDhweDtcbiAgLnN0cmVuZ3RoXG4gICAgZGlzcGxheSBub25lXG5cbi5wYXNzLXdvcmQtc3RyZW5ndGhcbiAgZGlzcGxheSBibG9ja1xuICAuc3RyZW5ndGhcbiAgICBkaXNwbGF5IGJsb2NrXG4gICAgbWFyZ2luLWJvdHRvbSAxMHB4XG4gICAgZW1cbiAgICAgIGZvbnQtc3R5bGUgbm9ybWFsXG4gICAgICBtYXJnaW4tcmlnaHQgMTBweFxuICAgIHNwYW5cbiAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgICBiYWNrZ3JvdW5kICNDQ0NcbiAgICAgIHdpZHRoIDQ2cHhcbiAgICAgIGhlaWdodCA2cHhcbiAgICAgIG1hcmdpbi1yaWdodCA0cHhcbiAgICAucmVkXG4gICAgICBiYWNrZ3JvdW5kICNkYzNjMDBcbiAgICAuZ3JlZW5cbiAgICAgIGJhY2tncm91bmQgIzYyYWEwMFxuICAuc3RhdGVcbiAgICBAZXh0ZW5kcyAuZXh0ZW5kcy1yZWdpc3Rlci10b29sdGlwLWljb25cbiAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgIGJhY2tncm91bmQtcG9zaXRpb24gLTdweCAtODNweDtcbiIsIi8qXG4gKiBib3JkZXI6IDxjb2xvcj5cbiAqIGJvcmRlcjogLi4uXG4gKi9cblxuYm9yZGVyKGNvbG9yLCBhcmdzLi4uKVxuICBpZiBjb2xvciBpcyBhICdjb2xvcidcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjb2xvciBhcmdzXG4gIGVsc2VcbiAgICBib3JkZXI6IGFyZ3VtZW50c1xuIiwiQGltcG9ydCAnbmliJ1xuQGltcG9ydCAncmVnaXN0ZXItcHJvZ3Jlc3MnXG5AaW1wb3J0ICdyZWdpc3Rlci10b29sdGlwJ1xuXG4uYmluZC1tb2JpbGVcbiAgbWFyZ2luLXRvcCAzMHB4XG4gIHVsXG4gICAgZmxvYXQgbGVmdFxuICAgIG1hcmdpbiAwIDAgLTIwcHhcbiAgICBsaVxuICAgICAgbGlzdC1zdHlsZSBub25lXG4gICAgICBwYWRkaW5nLWJvdHRvbSAyMHB4XG4gICAgICB2ZXJ0aWNhbC1hbGlnbiBtaWRkbGVcbiAgICAgIGZvbnQtc2l6ZSAxLjE2NmVtXG4gICAgICBjb2xvciAjMzMzXG4gICAgICBzcGFuXG4gICAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgICAgIHZlcnRpY2FsLWFsaWduIG1pZGRsZVxuICAgICAgZW1cbiAgICAgIGlcbiAgICAgICAgZm9udC1zdHlsZSBub3JtYWxcbiAgLmluZm9cbiAgICB0ZXh0LWFsaWduIGxlZnRcbiAgICBpbnB1dFxuICAgICAgYm9yZGVyICNjY2NcbiAgICAgIHdpZHRoIDI5OHB4XG4gICAgICBoZWlnaHQgMzVweFxuICAgICAgbGluZS1oZWlnaHQgMzVweFxuICAgICAgcGFkZGluZy1sZWZ0IDVweFxuICAgICAgZm9udC1zaXplIDE0cHhcbiAgICAgIGNvbG9yICNjY2NcbiAgICAgICY6Zm9jdXNcbiAgICAgICAgY29sb3IgIzMzM1xuICAgIC50aXRcbiAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgICB3aWR0aCAyNzJweFxuICAgICAgcGFkZGluZy1yaWdodCA1cHhcbiAgICAgIHRleHQtYWxpZ24gcmlnaHRcbiAgICAuY29kZVxuICAgICAgd2lkdGggMTM4cHhcbiAgICAuc2VuZC1jb2RlXG4gICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgYmFja2dyb3VuZCAjZGRkXG4gICAgICBtYXJnaW4tbGVmdCAxMHB4XG4gICAgICB3aWR0aCAxMjBweFxuICAgICAgaGVpZ2h0IDM1cHhcbiAgICAgIGxpbmUtaGVpZ2h0IDM1cHhcbiAgICAgIGZvbnQtc2l6ZSAxNHB4XG4gICAgICB3aGl0ZS1zcGFjZSBub3dyYXBcbiAgICAgIGNvbG9yICMzMzNcbiAgICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuICAgIC5yZXNlbmQtY29kZVxuICAgICAgcG9zaXRpb24gcmVsYXRpdmVcbiAgICAgIGRpc3BsYXkgbm9uZVxuICAgICAgYVxuICAgICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgICBiYWNrZ3JvdW5kICNkZGRcbiAgICAgICAgbWFyZ2luLWxlZnQgMTBweFxuICAgICAgICB3aWR0aCAxMDBweFxuICAgICAgICBoZWlnaHQgMzVweFxuICAgICAgICBsaW5lLWhlaWdodCAzNXB4XG4gICAgICAgIGZvbnQtc2l6ZSAxNHB4XG4gICAgICAgIGNvbG9yICMzMzNcbiAgICAgICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uIG5vbmVcbiAgICAuY291bnRkb3duXG4gICAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgICAgbGVmdCAwXG4gICAgICB0b3AgNTAlXG4gICAgICBtYXJnaW4tdG9wIDIwcHhcbiAgICAgIHdoaXRlLXNwYWNlIG5vd3JhcFxuICAgICAgY29sb3IgI2FkYWRhZFxuICAgIC5zdWJtaXRcbiAgICAuaWdub3JlXG4gICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgbGluZS1oZWlnaHQgMzBweFxuICAgICAgbWFyZ2luLXJpZ2h0IDEwcHhcbiAgICAgIGNvbG9yICNGRkZcbiAgICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuICAgIC5zdWJtaXRcbiAgICAgIG1hcmdpbi1sZWZ0IDI3NHB4XG4gICAgICBiYWNrZ3JvdW5kICNkYzNjMDBcbiAgICAgIHdpZHRoIDI5OHB4XG4gICAgICBoZWlnaHQgMzBweFxuICAgICAgbGluZS1oZWlnaHQgMzBweFxuICAgICAgdmVydGljYWwtYWxpZ24gdGV4dC1ib3R0b21cbiAgICAgIGZvbnQtc2l6ZSAxNnB4XG4gICAgLmlnbm9yZVxuICAgICAgY29sb3IgIzJiODFhOVxuICAgICAgZm9udC1zaXplIDE0cHgiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */